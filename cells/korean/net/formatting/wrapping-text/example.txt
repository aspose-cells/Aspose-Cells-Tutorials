//ExStart
//ExSummary: 이 코드는 새로운 엑셀 작업번호부, 작업번호부를 추가하고 셀을 사용자 지정하고 작업번호부를 저장하는 방법을 보여줍니다.
//ExStepSummary:0: 다음 코드에서는 문서 디렉토리 경로를 정의합니다.
//ExStepSummary:1: 다음 코드는 디렉토리가 있는지 확인하고, 그렇지 않으면 생성됩니다.
//ExStepSummary:2: 다음 코드에서는 Workbook 객체를 인스턴스합니다.
//ExStepSummary:3: 다음 코드에서는 작업책의 첫 번째 워크시트에 대한 참조를 얻습니다.
//ExStepSummary:4: 다음 코드는 워크시트의 "A1" 셀에 액세스합니다.
//ExStepSummary:5: 다음 코드에서 "A1" 셀에 값을 추가합니다.
//ExStepSummary:6: 다음 코드에서는 "A1" 셀의 텍스트의 수평적 조화를 설정하고 텍스트를 포장할 수 있습니다.
//ExStepSummary:7: 다음 코드는 Excel 작업 책자를 지정된 디렉토리에 저장합니다.
//ExStepImage:5:images/1.png
//ExStepImage:6:images/2.png

//ExStep:0-
// 문서 디렉토리 로그를 정의
string dataDir = "Your Document Directory";

//ExStep:1-
// 디렉토리가 있는지 확인
bool IsExists = System.IO.Directory.Exists(dataDir);
// 만약 존재하지 않는다면 그것을 만들어라
if (!IsExists)
    System.IO.Directory.CreateDirectory(dataDir);

//ExStep:2-
// 작업번호부 객체를 인스턴스
Workbook workbook = new Workbook();

//ExStep:3-
// 첫 번째 워크시트에 대한 참조를 얻으십시오
Worksheet worksheet = workbook.Worksheets[0];

//ExStep:4-
// 작업 표에서 "A1" 셀에 액세스
Aspose.Cells.Cell cell = worksheet.Cells["A1"];

//ExStep:5-
// "A1" 셀에 약간의 값을 추가합니다
cell.PutValue("Visit Aspose!");

//ExStep:6-
// 현재 세포 스타일을 얻으십시오
Style style = cell.GetStyle();
// 셀 내에서 텍스트 팩을 활성화
style.IsTextWrapped = true;
// 수정된 스타일을 다시 셀에 적용
cell.SetStyle(style);

//ExStep:7-
// Excel 파일을 지정된 형식으로 저장
workbook.Save(dataDir + "book1.out.xls", SaveFormat.Excel97To2003);
//ExEnd